% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/featureImportance.R
\name{featureImportance}
\alias{featureImportance}
\title{Feature Importance}
\usage{
featureImportance(object, data, features, target = NULL, n.feat.perm = 50,
  local = FALSE, measures, minimize = NULL, predict.fun = NULL,
  importance.fun = NULL, ...)
}
\arguments{
\item{object}{[any] \cr
Either a \code{\link[mlr]{WrappedModel}} or a \code{\link[mlr]{ResampleResult}}.
You can also provide any other trained model (however, this is experimental and you need to provide an appropriate \code{predict.fun}).}

\item{data}{[\code{data.frame}] \cr
The data whose features will be shuffled in order to measure the performance drop.
If \code{object} is of class \code{ResampleResult}, you should use the corresponding data on which the whole resampling was performed. In any other case, you might use some independent test data that was not used to fit the model (although you could also use the train data here).}

\item{features}{[list of \code{character}] \cr
A list where each element contains the names of at least one feature for which the permutation importance is computed.
If a list element contains two or more features, they will be permuted block-wise (without breaking the relationship between those features).}

\item{target}{[\code{character(1)}] \cr
Only needed if \code{object} is not of class \code{WrappedModel} or \code{ResampleResult}.
Name of the target feature to be predicted.}

\item{n.feat.perm}{[\code{numeric(1)}] \cr
The number of permutations of the feature(s) used to compute the feature importance.
The default is 50.}

\item{local}{[\code{logical(1)}] \cr
Should the performance (or the feature importance) be computed observation-wise?
Note that not all measures support this (e.g. one can not compute the AUC for one observation).
The default is FALSE.}

\item{measures}{[\code{\link[mlr]{Measure}} | list of \code{\link[mlr]{Measure}} | \code{function} | list of \code{function}] \cr
Performance measure(s) used to measure the model performance.
Can also be a list of function with signature \code{function(y, pred, minimize)},
where \code{y} and \code{pred} are vectors containing the true and the predicted values of the target,
and \code{minimize} is a logical that defines if smaller values of the measure refer to better performance.}

\item{minimize}{[\code{logical(1)}] \cr
Only needed if passed \code{measures} are functions measure.
#FIXME: include minimize to signature of measure functions and remove here!!!}

\item{predict.fun}{[\code{function}] \cr
Only needed if \code{object} is not of class \code{WrappedModel} or \code{ResampleResult}.
The signature must be \code{function(object, newdata)} and the function should always return a vector of predictions.
The default \code{NULL} internally uses \code{predict(object, newdata = newdata)}.}

\item{importance.fun}{[\code{function}] \cr
Function with two arguments \code{function(permuted, unpermuted)} that defines how the permuted and unpermuted predictions are aggregated to a feature importance measure.
The function takes the result of \code{\link{measurePerformance}} as input.
The default \code{NULL} internally uses \code{unpermuted - permuted} which is the drop in performance.}

\item{...}{Not used.}
}
\description{
Measures the feature importance by drop in performance.
}
